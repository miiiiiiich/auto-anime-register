"""
This type stub file was generated by pyright.
"""

from typing import Dict, List, Optional, Tuple

from mal import _base
from mal._mal import _MAL

class MangaCharacterResult:
    def __init__(self, name, role) -> None:
        """
        Manga character result
        """
        ...
    
    @property
    def name(self) -> str:
        ...
    
    @property
    def role(self) -> str:
        ...
    


class Manga(_MAL):
    def __init__(self, mal_id: int, timeout: int = ...) -> None:
        """
        Manga query by ID
        """
        ...
    
    def reload(self) -> None:
        """
        Reload manga query
        """
        ...
    
    @property
    def mal_id(self) -> int:
        ...
    
    @property
    def title(self) -> str:
        ...
    
    @property
    def title_english(self) -> str:
        ...
    
    @property
    def title_japanese(self) -> str:
        ...
    
    @property
    def title_synonyms(self) -> List[str]:
        ...
    
    @property
    def url(self) -> str:
        ...
    
    @property
    def image_url(self) -> str:
        ...
    
    @property
    def type(self) -> Optional[str]:
        ...
    
    @property
    def status(self) -> Optional[str]:
        ...
    
    @property
    def genres(self) -> List[str]:
        ...
    
    @property
    def themes(self) -> List[str]:
        ...
    
    @property
    def external_links(self) -> List[Tuple[str, str]]:
        """Return List of Tuples containing name and url"""
        ...
    
    @property
    def score(self) -> Optional[float]:
        ...
    
    @property
    def scored_by(self) -> Optional[int]:
        ...
    
    @property
    def rank(self) -> Optional[int]:
        ...
    
    @property
    def popularity(self) -> Optional[int]:
        ...
    
    @property
    def members(self) -> Optional[int]:
        ...
    
    @property
    def favorites(self) -> Optional[int]:
        ...
    
    @property
    @_base.property
    def volumes(self) -> Optional[int]:
        ...
    
    @property
    @_base.property
    def chapters(self) -> Optional[int]:
        ...
    
    @property
    @_base.property
    def published(self) -> Optional[str]:
        ...
    
    @property
    @_base.property_list
    def authors(self) -> List[str]:
        ...
    
    @property
    @_base.property_list
    def characters(self) -> List[MangaCharacterResult]:
        ...
    
    @property
    @_base.property_dict
    def related_manga(self) -> Dict[str, List[str]]:
        ...
    
    @property
    @_base.property
    def synopsis(self) -> Optional[str]:
        ...
    
    @property
    @_base.property
    def background(self) -> Optional[str]:
        ...
    


